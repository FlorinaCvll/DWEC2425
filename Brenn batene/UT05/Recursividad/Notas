// Recursividad basica
La recursividad b√°sica se puede ilustrar con el ejemplo cl√°sico del c√°lculo del factorial de un n√∫mero.

Factorial de un N√∫mero: El factorial de un n√∫mero
ùëõ (denotado como ùëõ!) es el producto de todos los enteros positivos hasta ùëõ.
Por definici√≥n:
    ùëõ! = ùëõ √ó ( ùëõ ‚àí 1)!
Con la condicion base:
    0! = 1

// Resursividad avanzada
La recursividad avanzada puede implicar t√©cnicas como la recursividad de cola (tail recursion), la memoizaci√≥n para mejorar el rendimiento y la recursividad mutua (mutual recursion).

// Recursividad de cola
La recursividad de cola es una forma de recursividad donde la llamada recursiva es la √∫ltima operaci√≥n que realiza la funci√≥n. Esto permite optimizaciones de tail call en algunos lenguajes y motores de JavaScript.

// Memoizaci√≥n
La memoizaci√≥n es una t√©cnica para optimizar funciones recursivas almacenando los resultados de subproblemas ya resueltos.

// Recursividad mutua
La recursividad mutua ocurre cuando dos o m√°s funciones se llaman recursivamente entre s√≠.

// Usos y desusos
Usar
    - Problemas naturales
        ‚Ä¢ Uso: Cuando el problema tiene una estructura natural recursiva, como √°rboles, grafos y algoritmos de divisi√≥n y conquista.
        ‚Ä¢ Ejemplo: Algoritmo de b√∫squeda binaria, recorrido de √°rboles.
    - Simplificacion
        ‚Ä¢ Uso: Para simplificar la soluci√≥n de un problema complejo dividi√©ndolo en subproblemas m√°s peque√±os.
        ‚Ä¢ Ejemplo: Algoritmos de ordenaci√≥n como Quick Sort y Merge Sort.
Evitar
    - Riesgo de desbordamiento de pila
        ‚Ä¢ Situaci√≥n: Cuando la profundidad de la recursi√≥n es muy grande y podr√≠a causar un desbordamiento de la pila.
        ‚Ä¢ Alternativas: Usar soluciones iterativas o t√©cnicas como la recursividad de cola si est√° soportada.
    - Rendimiento
        ‚Ä¢ Situaci√≥n: Cuando la recursividad sin optimizaci√≥n puede llevar a un rendimiento pobre debido a llamadas repetitivas a subproblemas.
        ‚Ä¢ Alternativas: Utilizar memoizaci√≥n o cambiar a una soluci√≥n iterativa.
